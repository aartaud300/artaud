package com.myshop.domain.plate;

// Generated 19 sept. 2010 16:22:35 by Hibernate Tools 3.2.4.GA

import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Plat generated by hbm2java
 */
@Entity
@Table(name = "plat", catalog = "restaurant")
public class Plat implements java.io.Serializable {

	private Integer id;
	private String nomPlat;
	private String description;
	private String type;

	public Plat() {
	}

	public Plat(String nomPlat, String description, String type) {
		this.nomPlat = nomPlat;
		this.description = description;
		this.type = type;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "NomPlat", nullable = false)
	public String getNomPlat() {
		return this.nomPlat;
	}

	public void setNomPlat(String nomPlat) {
		this.nomPlat = nomPlat;
	}

	@Column(name = "Description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Type", nullable = false, length = 100)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public AtomicInteger assignId() {
		this.id = idSequence.incrementAndGet();
		return idSequence;
	}

	private static final AtomicInteger idSequence = new AtomicInteger();

	@Override
	public String toString() {
		return "Plat [description=" + description + ", id=" + id + ", nomPlat="
				+ nomPlat + ", type=" + type + "]";
	}
}
